{"ast":null,"code":"var _jsxFileName = \"E:\\\\Study\\\\3_course\\\\2_Semester\\\\Cryptography\\\\Labs\\\\Crypto\\\\lab06(\\u042D\\u043D\\u0438\\u0433\\u043C\\u0430)\\\\lab6-enigma\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\nimport './App.scss';\nimport { Bar } from 'react-chartjs-2';\n\nconst App = () => {\n  // variant 13: 1-2-2\n  //6-4-2\n  const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\n  const [rotorL, setRotorL] = useState({\n    arr: 'JPGVOUMFYQBENHZRDKASXLICTW'.split(''),\n    state: 0\n  });\n  const rotorLcopy = 'JPGVOUMFYQBENHZRDKASXLICTW'.split('');\n  const [rotorM, setRotorM] = useState({\n    arr: 'ESOVPZJAYQUIRHXLNFTGKDCMWB'.split(''),\n    state: 0\n  });\n  const rotorMcopy = 'ESOVPZJAYQUIRHXLNFTGKDCMWB'.split('');\n  const [rotorR, setRotorR] = useState({\n    arr: 'AJDKSIRUXBLHWTMCQGZNPYFVOE'.split(''),\n    state: 0\n  });\n  const rotorRcopy = 'AJDKSIRUXBLHWTMCQGZNPYFVOE'.split('');\n  const reflector = new Map([['A', 'Y'], ['B', 'R'], ['C', 'U'], ['D', 'H'], ['E', 'Q'], ['F', 'S'], ['G', 'L'], ['I', 'P'], ['J', 'X'], ['K', 'N'], ['M', 'O'], ['T', 'Z'], ['V', 'W']]);\n  const rotorLOffset = 1;\n  const rotorMOffset = 2;\n  const rotorROffset = 2;\n  const [inputText, setInputText] = useState('');\n  const [resultText, setResultText] = useState('');\n  const [pressedButton, setPressedButton] = useState('');\n  const [resSym, setResSym] = useState('');\n  const [curRotorL, setCurRotorL] = useState('');\n  const [curRotorM, setCurRotorM] = useState('');\n  const [curRotorR, setCurRotorR] = useState('');\n  const [curRotorLBack, setCurRotorLBack] = useState('');\n  const [curRotorMBack, setCurRotorMBack] = useState('');\n  const [curRotorRBack, setCurRotorRBack] = useState('');\n\n  const inputTextHandler = e => {\n    const input = e.target.value.toUpperCase();\n\n    if (input.split('').every(symbol => alphabet.includes(symbol))) {\n      setInputText(input);\n    }\n  };\n\n  const keyDownHandler = key => {\n    setPressedButton(key);\n    setInputText(inputText + key);\n    calcResultSymbol(key);\n  };\n\n  const calcResultSymbol = key => {\n    const pressedIndex = alphabet.indexOf(key);\n    setCurRotorR(rotorR.arr[pressedIndex]);\n    const cRotorR = rotorR.arr[pressedIndex];\n    const cRotorM = rotorM.arr[alphabet.indexOf(rotorR.arr[pressedIndex])];\n    const cRotorL = rotorL.arr[alphabet.indexOf(cRotorM)];\n    setCurRotorM(cRotorM);\n    setCurRotorL(cRotorL);\n    let cRotorLBack = '';\n\n    if ([...reflector.keys()].find(key => key === cRotorL)) {\n      cRotorLBack = reflector.get(cRotorL);\n    } else {\n      cRotorLBack = [...reflector].find(([key, value]) => cRotorL === value)[0];\n    }\n\n    setCurRotorLBack(cRotorLBack);\n    const cRotorMBack = alphabet[rotorL.arr.indexOf(cRotorLBack)];\n    setCurRotorMBack(cRotorMBack);\n    const cRotorRBack = alphabet[rotorM.arr.indexOf(cRotorMBack)];\n    setCurRotorRBack(cRotorRBack);\n    const resButton = alphabet[rotorR.arr.indexOf(cRotorRBack)];\n    setResSym(resButton);\n    setResultText(resultText + resButton);\n    console.log(rotorLOffset + rotorL.state);\n    console.log(rotorMOffset + rotorM.state);\n    console.log(rotorROffset + rotorR.state);\n\n    if (rotorR.state + rotorROffset < rotorR.arr.length) {\n      setRotorR({\n        arr: rotorRcopy.splice(-rotorR.state - rotorROffset).concat(rotorRcopy),\n        state: rotorR.state + rotorROffset\n      });\n      setRotorM({ ...rotorM\n      });\n      setRotorL({ ...rotorL\n      });\n    } else if (rotorM.state + rotorMOffset < rotorM.arr.length) {\n      setRotorR({\n        arr: rotorRcopy,\n        state: 0\n      });\n      setRotorM({\n        arr: rotorMcopy.splice(-rotorM.state - rotorMOffset).concat(rotorMcopy),\n        state: rotorM.state + rotorMOffset\n      });\n      setRotorL({ ...rotorL\n      });\n    } else if (rotorL.state + rotorLOffset < rotorL.arr.length) {\n      setRotorR({\n        arr: rotorRcopy,\n        state: 0\n      });\n      setRotorM({\n        arr: rotorMcopy,\n        state: 0\n      });\n      setRotorL({\n        arr: rotorLcopy.splice(-rotorL.state - rotorLOffset).concat(rotorLcopy),\n        state: rotorL.state + rotorLOffset\n      });\n    } else {\n      setRotorR({\n        arr: rotorRcopy,\n        state: 0\n      });\n      setRotorM({\n        arr: rotorMcopy,\n        state: 0\n      });\n      setRotorL({\n        arr: rotorLcopy,\n        state: 0\n      });\n    }\n\n    return resultText + resButton;\n  };\n\n  const printHistogram = text => {\n    const resu = [];\n    let symbolCountMap = new Map();\n    text.split('').forEach(symbol => {\n      if (symbolCountMap.has(symbol)) {\n        let oldValue = symbolCountMap.get(symbol);\n        symbolCountMap.set(symbol, ++oldValue);\n      } else {\n        symbolCountMap.set(symbol, 1);\n      }\n    });\n    console.log(symbolCountMap);\n    let length = text.length;\n    symbolCountMap.forEach((value, key) => {\n      const sharpAmount = value / length * 100;\n      resu.push(sharpAmount);\n    });\n    return resu;\n  };\n\n  const data1 = {\n    labels: inputText.split('').filter((value, index, self) => {\n      return self.indexOf(value) === index;\n    }),\n    datasets: [{\n      label: 'Original Text',\n      backgroundColor: 'rgba(255,99,132,0.2)',\n      borderColor: 'rgba(255,99,132,1)',\n      borderWidth: 1,\n      hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n      hoverBorderColor: 'rgba(255,99,132,1)',\n      data: printHistogram(inputText)\n    }]\n  };\n  const data2 = {\n    labels: resultText.split('').filter((value, index, self) => {\n      return self.indexOf(value) === index;\n    }),\n    datasets: [{\n      label: 'Encrypted Text',\n      backgroundColor: 'rgba(255,99,132,0.2)',\n      borderColor: 'rgba(255,99,132,1)',\n      borderWidth: 1,\n      hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n      hoverBorderColor: 'rgba(255,99,132,1)',\n      data: printHistogram(resultText)\n    }]\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 25\n    }\n  }, alphabet.map((symbol, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      className: \"col p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: `btn p-1 m-1 ${resSym === symbol ? 'btn-success' : null}`,\n      onClick: e => keyDownHandler(symbol),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 45\n      }\n    }, symbol));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 25\n    }\n  }, alphabet.map((symbol, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      className: \"col p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: `btn p-1 m-1 ${pressedButton === symbol ? 'btn-danger' : 'btn-primary'}`,\n      onClick: e => keyDownHandler(symbol),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 45\n      }\n    }, symbol));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 25\n    }\n  }, rotorR.arr.map((symbol, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      className: \"col p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: `btn btn-${curRotorR === symbol ? 'danger' : curRotorRBack === symbol ? 'success' : 'secondary'} p-1 m-1`,\n      onClick: e => keyDownHandler(symbol),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 45\n      }\n    }, symbol));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 25\n    }\n  }, rotorM.arr.map((symbol, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      className: \"col p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: `btn btn-${curRotorM === symbol ? 'danger' : curRotorMBack === symbol ? 'success' : 'secondary'} p-1 m-1`,\n      onClick: e => keyDownHandler(symbol),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 45\n      }\n    }, symbol));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 25\n    }\n  }, rotorL.arr.map((symbol, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      className: \"col p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: `btn btn-${curRotorL === symbol ? 'danger' : curRotorLBack === symbol ? 'success' : 'secondary'} p-1 m-1`,\n      onClick: e => keyDownHandler(symbol),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 45\n      }\n    }, symbol));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 25\n    }\n  }, [...reflector.keys()].map((key, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      className: \"col p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: `btn btn-${curRotorL === key || curRotorL === reflector.get(key) ? 'danger' : 'secondary'} p-1 m-1`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 45\n      }\n    }, `${key}-${reflector.get(key)}`));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Bar, {\n    data: data1,\n    width: 100,\n    height: 50,\n    options: {\n      maintainAspectRatio: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 37\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Bar, {\n    data: data2,\n    width: 100,\n    height: 50,\n    options: {\n      maintainAspectRatio: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 37\n    }\n  }))))), \" \", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 33\n    }\n  }, \"Result: \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 33\n    }\n  }, resultText))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 33\n    }\n  }, \"Input: \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 33\n    }\n  }, inputText))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: inputText,\n    type: \"text\",\n    onChange: e => inputTextHandler(e),\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 29\n    }\n  }))), \" \"), \" \"), /*#__PURE__*/React.createElement(KeyboardEventHandler, {\n    handleKeys: 'qwertyuiopasdfghjklzxcvbnm'.split(''),\n    onKeyEvent: (key, e) => keyDownHandler(key.toUpperCase()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["E:/Study/3_course/2_Semester/Cryptography/Labs/Crypto/lab06(Энигма)/lab6-enigma/src/App.js"],"names":["React","useState","KeyboardEventHandler","Bar","App","alphabet","split","rotorL","setRotorL","arr","state","rotorLcopy","rotorM","setRotorM","rotorMcopy","rotorR","setRotorR","rotorRcopy","reflector","Map","rotorLOffset","rotorMOffset","rotorROffset","inputText","setInputText","resultText","setResultText","pressedButton","setPressedButton","resSym","setResSym","curRotorL","setCurRotorL","curRotorM","setCurRotorM","curRotorR","setCurRotorR","curRotorLBack","setCurRotorLBack","curRotorMBack","setCurRotorMBack","curRotorRBack","setCurRotorRBack","inputTextHandler","e","input","target","value","toUpperCase","every","symbol","includes","keyDownHandler","key","calcResultSymbol","pressedIndex","indexOf","cRotorR","cRotorM","cRotorL","cRotorLBack","keys","find","get","cRotorMBack","cRotorRBack","resButton","console","log","length","splice","concat","printHistogram","text","resu","symbolCountMap","forEach","has","oldValue","set","sharpAmount","push","data1","labels","filter","index","self","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","data","data2","map","i","maintainAspectRatio"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\nimport './App.scss'\n\nimport { Bar } from 'react-chartjs-2';\n\n\nconst App = () => {\n    // variant 13: 1-2-2\n    //6-4-2\n    const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('')\n    \n    const [rotorL, setRotorL] = useState({\n        arr: 'JPGVOUMFYQBENHZRDKASXLICTW'.split(''),\n        state: 0\n    })\n    const rotorLcopy = 'JPGVOUMFYQBENHZRDKASXLICTW'.split('')\n    \n    const [rotorM, setRotorM] = useState({\n        arr: 'ESOVPZJAYQUIRHXLNFTGKDCMWB'.split(''),\n        state: 0\n    })\n    const rotorMcopy = 'ESOVPZJAYQUIRHXLNFTGKDCMWB'.split('')\n    \n    const [rotorR, setRotorR] = useState({\n        arr: 'AJDKSIRUXBLHWTMCQGZNPYFVOE'.split(''),\n        state: 0\n    })\n    const rotorRcopy = 'AJDKSIRUXBLHWTMCQGZNPYFVOE'.split('')\n\n    const reflector = new Map([\n        ['A', 'Y'],\n        ['B', 'R'],\n        ['C', 'U'],\n        ['D', 'H'],\n        ['E', 'Q'],\n        ['F', 'S'],\n        ['G', 'L'],\n        ['I', 'P'],\n        ['J', 'X'],\n        ['K', 'N'],\n        ['M', 'O'],\n        ['T', 'Z'],\n        ['V', 'W']\n    ])\n\n    const rotorLOffset = 1\n    const rotorMOffset = 2\n    const rotorROffset = 2\n\n    const [inputText, setInputText] = useState('')\n    const [resultText, setResultText] = useState('')\n    const [pressedButton, setPressedButton] = useState('')\n    const [resSym, setResSym] = useState('')\n\n    const [curRotorL, setCurRotorL] = useState('')\n    const [curRotorM, setCurRotorM] = useState('')\n    const [curRotorR, setCurRotorR] = useState('')\n    const [curRotorLBack, setCurRotorLBack] = useState('')\n    const [curRotorMBack, setCurRotorMBack] = useState('')\n    const [curRotorRBack, setCurRotorRBack] = useState('')\n\n    const inputTextHandler = (e) => {\n        const input = e.target.value.toUpperCase();\n        if (input.split('').every(symbol => alphabet.includes(symbol))) {\n            setInputText(input)\n        }\n    }\n\n    const keyDownHandler = (key) => {\n        setPressedButton(key)\n        setInputText(inputText + key)\n        calcResultSymbol(key)\n    }\n\n    const calcResultSymbol = (key) => {\n        const pressedIndex = alphabet.indexOf(key)\n\n        setCurRotorR(rotorR.arr[pressedIndex])\n        const cRotorR = rotorR.arr[pressedIndex]\n        const cRotorM = rotorM.arr[alphabet.indexOf(rotorR.arr[pressedIndex])]\n        const cRotorL = rotorL.arr[alphabet.indexOf(cRotorM)]\n        setCurRotorM(cRotorM)\n        setCurRotorL(cRotorL)\n\n\n        let cRotorLBack = ''\n        if ([...reflector.keys()].find(key => key === cRotorL)) {\n            cRotorLBack = reflector.get(cRotorL)\n        } else {\n            cRotorLBack = [...reflector].find(([key, value]) => cRotorL === value)[0]\n        }\n        setCurRotorLBack(cRotorLBack)\n\n        const cRotorMBack = alphabet[rotorL.arr.indexOf(cRotorLBack)]\n        setCurRotorMBack(cRotorMBack)\n\n        const cRotorRBack = alphabet[rotorM.arr.indexOf(cRotorMBack)]\n        setCurRotorRBack(cRotorRBack)\n\n        const resButton = alphabet[rotorR.arr.indexOf(cRotorRBack)]\n        setResSym(resButton)\n        setResultText(resultText + resButton)\n        console.log(rotorLOffset + rotorL.state)\n        console.log(rotorMOffset + rotorM.state)\n        console.log(rotorROffset + rotorR.state)\n\n        if (rotorR.state + rotorROffset < rotorR.arr.length) {\n            setRotorR({ arr: rotorRcopy.splice(-rotorR.state - rotorROffset).concat(rotorRcopy), state: rotorR.state + rotorROffset })\n            setRotorM({ ...rotorM })\n            setRotorL({ ...rotorL })\n        } else if (rotorM.state + rotorMOffset < rotorM.arr.length) {\n            setRotorR({ arr: rotorRcopy, state: 0 })\n            setRotorM({ arr: rotorMcopy.splice(-rotorM.state - rotorMOffset).concat(rotorMcopy), state: rotorM.state + rotorMOffset })\n            setRotorL({ ...rotorL })\n        } else if (rotorL.state + rotorLOffset < rotorL.arr.length) {\n            setRotorR({ arr: rotorRcopy, state: 0 })\n            setRotorM({ arr: rotorMcopy, state: 0 })\n            setRotorL({ arr: rotorLcopy.splice(-rotorL.state - rotorLOffset).concat(rotorLcopy), state: rotorL.state + rotorLOffset })\n        } else {\n            setRotorR({ arr: rotorRcopy, state: 0 })\n            setRotorM({ arr: rotorMcopy, state: 0 })\n            setRotorL({ arr: rotorLcopy, state: 0 })\n        }\n\n        return resultText + resButton\n    }\n\n    const printHistogram = (text) => {\n        const resu = []\n        let symbolCountMap = new Map();\n\n        text.split('').forEach(symbol => {\n            if (symbolCountMap.has(symbol)) {\n                let oldValue = symbolCountMap.get(symbol)\n                symbolCountMap.set(symbol, ++oldValue)\n            } else {\n                symbolCountMap.set(symbol, 1)\n            }\n        })\n\n        console.log(symbolCountMap);\n\n        let length = text.length;\n        symbolCountMap.forEach((value, key) => {\n            const sharpAmount = (value / length * 100)\n            resu.push(sharpAmount)\n        })\n\n        return resu\n    }\n\n    const data1 = {\n        labels: inputText.split('').filter((value, index, self) => {\n            return self.indexOf(value) === index;\n        }),\n        datasets: [\n            {\n                label: 'Original Text',\n                backgroundColor: 'rgba(255,99,132,0.2)',\n                borderColor: 'rgba(255,99,132,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n                hoverBorderColor: 'rgba(255,99,132,1)',\n                data: printHistogram(inputText)\n            }\n        ]\n    };\n\n    const data2 = {\n        labels: resultText.split('').filter((value, index, self) => {\n            return self.indexOf(value) === index;\n        }),\n        datasets: [\n            {\n                label: 'Encrypted Text',\n                backgroundColor: 'rgba(255,99,132,0.2)',\n                borderColor: 'rgba(255,99,132,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n                hoverBorderColor: 'rgba(255,99,132,1)',\n                data: printHistogram(resultText)\n            }\n        ]\n    };\n\n    return (\n        <>\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-8\">\n\n                        <div className=\"row\">\n                            {\n                                alphabet.map((symbol, i) => {\n                                    return (\n                                        <div key={i} className=\"col p-0\">\n                                            <button className={`btn p-1 m-1 ${resSym === symbol ? 'btn-success' : null}`} onClick={e => keyDownHandler(symbol)}>{symbol}</button>\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n                        <div className=\"row\">\n                            {\n                                alphabet.map((symbol, i) => {\n                                    return (\n                                        <div key={i} className=\"col p-0\">\n                                            <button className={`btn p-1 m-1 ${pressedButton === symbol ? 'btn-danger' : 'btn-primary'}`} onClick={e => keyDownHandler(symbol)}>{symbol}</button>\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n                        <div className=\"row\">\n                            {\n                                rotorR.arr.map((symbol, i) => {\n                                    return (\n                                        <div key={i} className=\"col p-0\">\n                                            <button className={`btn btn-${curRotorR === symbol ? 'danger' : curRotorRBack === symbol ? 'success' : 'secondary'} p-1 m-1`} onClick={e => keyDownHandler(symbol)}>\n                                                {symbol}\n                                            </button>\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n                        <div className=\"row\">\n                            {\n                                rotorM.arr.map((symbol, i) => {\n                                    return (\n                                        <div key={i} className=\"col p-0\">\n                                            <button className={`btn btn-${curRotorM === symbol ? 'danger' : curRotorMBack === symbol ? 'success' : 'secondary'} p-1 m-1`} onClick={e => keyDownHandler(symbol)}>{symbol}</button>\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n                        <div className=\"row\">\n                            {\n                                rotorL.arr.map((symbol, i) => {\n                                    return (\n                                        <div key={i} className=\"col p-0\">\n                                            <button className={`btn btn-${curRotorL === symbol ? 'danger' : curRotorLBack === symbol ? 'success' : 'secondary'} p-1 m-1`} onClick={e => keyDownHandler(symbol)}>{symbol}</button>\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n                        <div className=\"row\">\n                            {\n                                [...reflector.keys()].map((key, i) => {\n                                    return (\n                                        <div key={i} className=\"col p-0\">\n                                            <button className={`btn btn-${curRotorL === key || curRotorL === reflector.get(key) ? 'danger' : 'secondary'} p-1 m-1`} >{`${key}-${reflector.get(key)}`}</button>\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <div className=\"chart\">\n                                    <Bar\n                                        data={data1}\n                                        width={100}\n                                        height={50}\n                                        options={{\n                                            maintainAspectRatio: false\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <div className=\"chart\">\n                                    <Bar\n                                        data={data2}\n                                        width={100}\n                                        height={50}\n                                        options={{\n                                            maintainAspectRatio: false\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div> {/* .col */}\n                    <div className=\"col-4\">\n\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <h5>Result: </h5>\n                                <p>{resultText}</p>\n                            </div>\n                        </div>\n\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <h5>Input: </h5>\n                                <p>{inputText}</p>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <input\n                                value={inputText}\n                                type=\"text\"\n                                onChange={(e) => inputTextHandler(e)}\n                                disabled\n                            />\n                        </div>\n\n                    </div> {/* .col */}\n                </div> {/* .row */}\n            </div>\n\n            <KeyboardEventHandler\n                handleKeys={'qwertyuiopasdfghjklzxcvbnm'.split('')}\n                onKeyEvent={(key, e) => keyDownHandler(key.toUpperCase())}\n            />\n        </>\n    )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}